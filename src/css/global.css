/*
----------------------------------------------------------------------------
CSS Reset.

See:
Eric Meyer = https://meyerweb.com/eric/tools/css/reset/
Andy Bell = https://hankchizljaw.com/wrote/a-modern-css-reset/
Josh Comeau = https://www.joshwcomeau.com/css/custom-css-reset/
Kilian Valkhof = https://kilianvalkhof.com/2022/css-html/your-css-reset-needs-text-size-adjust-probably/
----------------------------------------------------------------------------
*/
html {
    /* Zoom root font size on high density screens (e.g. 2K), but not to the extent that the additional real estate can't be utilised. */
    @media (width >= 160em) {
        font-size: var(--type-font-size-2k);
    }

    accent-color: var(--color-brand);
    color-scheme: dark;
    text-size-adjust: none;
}

:where(*, *::after, *::before) {
    box-sizing: border-box;
}

* {
    background: transparent;
    border: 0;
    margin: 0;
    padding: 0;
    vertical-align: baseline;
}

:where(html, body) {
    background-color: var(--color-background);
    color: var(--color-text);
    min-block-size: 100vh;
}

:where(ol, ul)[class] {
    list-style-type: '';
}

:where(ol, ul):not([class]) {
    padding-inline-start: var(--gutter-l);
}

img {
    block-size: auto;
    display: block;
    max-inline-size: 100%;
}

:where(audio, video) {
    inline-size: 100%;
    opacity: 0.6;
    transition: opacity var(--animation);
}

:where(audio, video):hover,
:where(audio, video):focus {
    opacity: 1;
}

svg {
    flex-shrink: 0;
    max-inline-size: 100%;
}

a {
    appearance: none;
    color: var(--color-link);
    cursor: pointer;
    -webkit-tap-highlight-color: oklch(0% 0 0 / 0%);
    text-decoration-thickness: 0.075em;
    text-underline-offset: 0.3125em;
    transition: all var(--animation);

    &:hover {
        color: var(--color-brand);
        text-decoration: none;
    }
}

:target {
    scroll-margin-block: calc(var(--gutter-clamp-xl) * 3);
}

@media (prefers-reduced-motion: no-preference) {
    :where(html, body) {
        scroll-behavior: smooth;
    }
}

@media (prefers-reduced-motion: reduce) {
    * {
        /* stylelint-disable declaration-no-important */
        animation-duration: 0.01ms !important;
        animation-iteration-count: 1 !important;
        scroll-behavior: auto !important;
        transition-duration: 0.01ms !important;
    }
}

/*
----------------------------------------------------------------------------
Typography.

Fluid type calculator = https://chrisburnell.com/clamp-calculator/
Based on min viewport = 480px / max viewport = 1440px.
----------------------------------------------------------------------------
*/
body {
    font-family: var(--type-font-family);
    font-size: clamp(var(--type-font-size-s), 0.938rem + 0.625vw, var(--type-font-size));
    -webkit-font-smoothing: antialiased; /* https://www.joshwcomeau.com/css/custom-css-reset/#four-improve-text-rendering-5 */
    line-height: 1.7;
}

:where(h1, h2, h3, [class*='h--']) {
    font-family: var(--type-font-family-title);
    font-weight: 400;
    letter-spacing: 0.05em;
    line-height: 1.2;
}

:where(h1, .h--1) {
    font-size: clamp(var(--type-font-size-h2), 2.378rem + 2.069vw, var(--type-font-size-h1));
    text-align: center;
}

:where(h2, .h--2) {
    font-size: clamp(var(--type-font-size-h3), 1.682rem + 1.464vw, var(--type-font-size-h2));
    margin-block-end: var(--gutter);
}

:where(h3, .h--3) {
    font-size: clamp(var(--type-font-size), 1.19rem + 1.035vw, var(--type-font-size-h3));
    margin-block-end: var(--gutter);
}


:where(p, :is(ul, ol):not([class])) {
    margin-block-end: var(--gutter);
}

:where(p, li):not([class]) {
    max-inline-size: var(--type-max-line-length);
}

small {
    font-size: var(--type-font-size-s);
}

figcaption {
    font-size: var(--type-font-size-s);
    font-style: italic;
}

/*
----------------------------------------------------------------------------
:focus.
----------------------------------------------------------------------------
*/
:focus-visible {
    border-radius: var(--border-radius-s);
    box-shadow: 0 0 0 0.25rem var(--color-focus);
    outline: 0.25rem solid transparent;
}

:focus:not(:focus-visible) {
    outline: 0.25rem solid transparent;
}
